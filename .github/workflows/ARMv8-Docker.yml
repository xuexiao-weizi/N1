name: ARMv8_Docker

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'
 # schedule:
  #  - cron: 0 16 * * 4

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: ARMv8/ARMv8-Docker.config
  DIY_P1_SH: diy-part1.sh
  DIY_P2_SH: diy-part2.sh
  DOCKER_BUILD_SH: buildImage.sh
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: false
  UPLOAD_COWTRANSFER: false
  UPLOAD_WETRANSFER: false
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai
  FILE_NAME: ARMv8-Docker
  PRODUCT_NAME: ARMv8-Docker

jobs:
  build:
    runs-on: ubuntu-18.04

    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(curl -fsSL git.io/depends-ubuntu-1804)
        sudo -E apt-get -qq install time
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
        echo "dibao_o=${{ secrets.dibao_gdq_o }}"  >> $GITHUB_ENV

    - name: 编译前硬盘容量
      if: (!cancelled())
      run: df -hT

    - name: Clone source code
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt
        cd openwrt
        useVersionInfo=$(git show -s --date=short --format="Author: %an<br/>date: %cd<br/>commit: %s<br/>commit hash: %H")
        echo "useVersionInfo=$useVersionInfo" >> $GITHUB_ENV
        echo "DATE=$(date "+%Y-%m-%d %H:%M:%S")" >> $GITHUB_ENV
        echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV
        echo "DATE_YMD=$(date +"%Y%m%d")" >> $GITHUB_ENV

    - name: add and cat cpufreq file
      run: |
        cd openwrt
        sed -i 's/LUCI_DEPENDS.*/LUCI_DEPENDS:=@TARGET_armvirt_64/g' package/lean/luci-app-cpufreq/Makefile
        cat package/lean/luci-app-cpufreq/Makefile
        sed -i 's/entry({"admin", "services", "cpufreq"}, cbi("cpufreq"), _("CPU Freq"), 900).dependent=false/entry({"admin", "system", "cpufreq"}, cbi("cpufreq"), _("CPU Freq"), 9).dependent=false/g' package/lean/luci-app-cpufreq/luasrc/controller/cpufreq.lua
        cat package/lean/luci-app-cpufreq/luasrc/controller/cpufreq.lua

    - name: Openwrt version
      run: |
        cd openwrt
        OpVersion1=$(echo "$(cat package/lean/default-settings/files/zzz-default-settings)" | grep -Po "DISTRIB_REVISION=\'\K[^\']*")
        echo $OpVersion1
        OpVersion2=$(date "+%Y.%m.%d"\ \compiled\ \by\ \tg:@zhe_teng)
        echo $OpVersion2
        sed -i "s/DISTRIB_REVISION=.*/DISTRIB_REVISION=\'$OpVersion1\ $OpVersion2\'\"\ \>>\ \/\etc\/\openwrt_release/" package/lean/default-settings/files/zzz-default-settings
        echo "$(cat package/lean/default-settings/files/zzz-default-settings)" | grep -Po "DISTRIB_REVISION=\'\K[^\']*"
        #sed -i "/CPU usage/a\                \<tr><td\ \width=\"33%\"\> 使用帮助\ <\/td><td>点击直达F大帖子：<a href=\"https://www.right.com.cn/forum/thread-4055451-1-1.html\">\ ➦新帖 \</a> 和 <a href=\"https://www.right.com.cn/forum/thread-981406-1-1.html\">\ ➦旧帖 \</a></td></tr>" package/lean/autocore/files/arm/index.htm
        echo "TAG=$OpVersion1" >> $GITHUB_ENV

    - name: SSH connection to Actions
      uses: P3TERX/ssh2actions@v1.0.0
      if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
      env:
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}

    - name: Build and push docker image
      id: docker
      #if: steps.organize.outputs.status == 'success' && !cancelled()
      run: |
        cd $GITHUB_WORKSPACE/docker/
        sudo rm -rf openwrt-armvirt-64-*
        sudo wget $dibao_o
        chmod +x $DOCKER_BUILD_SH
        ./$DOCKER_BUILD_SH
        gzip -dc dockerimgs/docker/*.gz | docker load
        docker login --username=${{ secrets.DOCKER_USERNAME }} --password=${{ secrets.DOCKER_PASSWORD }}
        docker tag hibuddies/openwrt-aarch64 hibuddies/openwrt-aarch64:${{ env.TAG }}
        docker push hibuddies/openwrt-aarch64
        docker push hibuddies/openwrt-aarch64:${{ env.TAG }}
        echo "::set-output name=status::success"

    - name: 编译后硬盘容量
      if: (!cancelled())
      run: df -hT

    - name: Telegram notification
      if: steps.docker.outputs.status == 'success' && !cancelled()
      run: curl -k --data chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" --data "text=${{ env.FILE_NAME }}编译完成" "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage"

#    - name: WeChat notification
#      if: steps.organize.outputs.status == 'success' && !cancelled()
#      run: curl https://sc.ftqq.com/${{ secrets.ServerChan }}.send?text=${{ env.FILE_NAME }}编译完成
